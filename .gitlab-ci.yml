# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

variables:
  NAME: "Minecraft Fireworks"
  VERSION: "2.0-Beta"

default:
  image: registry-vpc.cn-zhangjiakou.aliyuncs.com/glowberry/spigot:20230107

stages:          # List of stages for jobs, and their order of execution
  - build

build_1.14.3:
  only: [master]
  stage: build
  script:
    - mvn clean package --file ./pom-1.14.3.xml
    - echo "1.14.3 编译完成"
  tags:
    - Maven
  artifacts:
    name: "$NAME $VERSION (1.14.3)"
    paths:
      - "./target/*.jar"
    when: on_success
    expire_in: 90 days

build_1.15.2:
  only: [master]
  stage: build
  script:
    - mvn clean package --file ./pom-1.15.2.xml
    - echo "1.15.2 编译完成"
  tags:
    - Maven
  artifacts:
    name: "$NAME $VERSION (1.15.2)"
    paths:
      - "./target/*.jar"
    when: on_success
    expire_in: 90 days

build_1.16.5:
  only: [master]
  stage: build
  script:
    - mvn clean package --file ./pom-1.16.5.xml
    - echo "1.16.5 编译完成"
  tags:
    - Maven
  artifacts:
    name: "$NAME $VERSION (1.16.5)"
    paths:
      - "./target/*.jar"
    when: on_success
    expire_in: 90 days

build_1.17.1:
  only: [master]
  stage: build
  script:
    - mvn clean package --file ./pom-1.17.1.xml
    - echo "1.17.1 编译完成"
  tags:
    - Maven
  artifacts:
    name: "$NAME $VERSION (1.17.1)"
    paths:
      - "./target/*.jar"
    when: on_success
    expire_in: 90 days

build_1.18.2:
  only: [master]
  stage: build
  script:
    - mvn clean package --file ./pom-1.18.2.xml
    - echo "1.18.2 编译完成"
  tags:
    - Maven
  artifacts:
    name: "$NAME $VERSION (1.18.2)"
    paths:
      - "./target/*.jar"
    when: on_success
    expire_in: 90 days

build_1.19.3:
  only: [master]
  stage: build
  script:
    - mvn clean package --file ./pom-1.19.3.xml
    - echo "1.19.3 编译完成"
  tags:
    - Maven
  artifacts:
    name: "$NAME $VERSION (1.19.3)"
    paths:
      - "./target/*.jar"
    when: on_success
    expire_in: 90 days
  


build_1.14.3_dev:
  except: [master]
  stage: build
  script:
    - mvn clean package --file ./pom-1.14.3.xml
    - echo "1.14.3 编译完成"
  tags:
    - Maven
  artifacts:
    name: "$NAME $VERSION (1.14.3)"
    paths:
      - "./target/*.jar"
    when: on_success
    expire_in: 90 days

build_1.15.2_dev:
  except: [master]
  stage: build
  script:
    - mvn clean package --file ./pom-1.15.2.xml
    - echo "1.15.2 编译完成"
  tags:
    - Maven
  artifacts:
    name: "$NAME $VERSION (1.15.2)"
    paths:
      - "./target/*.jar"
    when: on_success
    expire_in: 90 days

build_1.16.5_dev:
  except: [master]
  stage: build
  script:
    - mvn clean package --file ./pom-1.16.5.xml
    - echo "1.16.5 编译完成"
  tags:
    - Maven
  artifacts:
    name: "$NAME $VERSION (1.16.5)"
    paths:
      - "./target/*.jar"
    when: on_success
    expire_in: 90 days

build_1.17.1_dev:
  except: [master]
  stage: build
  script:
    - mvn clean package --file ./pom-1.17.1.xml
    - echo "1.17.1 编译完成"
  tags:
    - Maven
  artifacts:
    name: "$NAME $VERSION (1.17.1)"
    paths:
      - "./target/*.jar"
    when: on_success
    expire_in: 90 days

build_1.18.2_dev:
  except: [master]
  stage: build
  script:
    - mvn clean package --file ./pom-1.18.2.xml
    - echo "1.18.2 编译完成"
  tags:
    - Maven
  artifacts:
    name: "$NAME $VERSION (1.18.2)"
    paths:
      - "./target/*.jar"
    when: on_success
    expire_in: 90 days

build_1.19.3_dev:
  except: [master]
  stage: build
  script:
    - mvn clean package --file ./pom-1.19.3.xml
    - echo "1.19.3 编译完成"
  tags:
    - Maven
  artifacts:
    name: "$NAME $VERSION (1.19.3)"
    paths:
      - "./target/*.jar"
    when: on_success
    expire_in: 90 days




